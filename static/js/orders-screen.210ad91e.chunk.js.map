{"version":3,"sources":["screens/OrdersScreen/Order/styles.module.css","screens/OrdersScreen/styles.module.css","lib/api/types.ts","screens/OrdersScreen/Order/index.tsx","screens/OrdersScreen/Component.tsx"],"names":["module","exports","Places","PaymentStatus","StatusMap","New","InModeration","Held","InProgress","ModerationNegative","InCancel","Canceled","Rejected","Paid","Order","order","eventPage","useSelector","eventPageSelector","event","id","schedule","ticket","tickets","image","images","currency","price","status","apiResponseStatus","className","styles","wrapper","Image","logo","src","thumbnail","src2x","thumbnail2x","content","info","title","date","location","oneOfPlaces","cost","getCurrencySymbol","Component","skeleton","orders","ordersSelector","isLoading","ordersLoadingSelector","useMetrikaHit","length","map","key","empty","text"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,wBAAwB,iBAAiB,+BAA+B,KAAO,qBAAqB,QAAU,wBAAwB,KAAO,qBAAqB,mBAAmB,iCAAiC,MAAQ,sBAAsB,KAAO,qBAAqB,SAAW,yBAAyB,OAAS,yB,oBCAzVD,EAAOC,QAAU,CAAC,QAAU,wBAAwB,MAAQ,sBAAsB,KAAO,uB,4CC0CpFC,EA2BOC,E,kDA3BPD,K,UAAAA,E,gBAAAA,E,kBAAAA,E,mBAAAA,M,cA2BOC,K,UAAAA,E,6BAAAA,E,YAAAA,E,yBAAAA,E,yCAAAA,E,qBAAAA,E,oBAAAA,E,oBAAAA,E,aAAAA,M,oDC1DNC,EAAY,CACd,CAACD,EAAcE,KAAM,0DACrB,CAACF,EAAcG,cAAe,gEAC9B,CAACH,EAAcI,MAAO,gEACtB,CAACJ,EAAcK,YAAa,gEAC5B,CAACL,EAAcM,oBAAqB,mDACpC,CAACN,EAAcO,UAAW,6CAC1B,CAACP,EAAcQ,UAAW,6CAC1B,CAACR,EAAcS,UAAW,mDAC1B,CAACT,EAAcU,MAAO,8CA0CXC,EAnCgB,EAAGC,YAAa,IAAD,UACpCC,EAAgCC,YAAYC,YAAkBH,EAAMI,MAAMC,MAC1E,MAAED,EAAF,SAASE,GAAaL,EACtBM,EAAM,OAAGH,QAAH,IAAGA,GAAH,UAAGA,EAAOI,eAAV,aAAG,EAAiB,GAC1BC,EAAK,OAAGL,QAAH,IAAGA,GAAH,UAAGA,EAAOM,cAAV,aAAG,EAAgB,GACxBC,EAAQ,iBAAGJ,QAAH,IAAGA,GAAH,UAAGA,EAAQK,aAAX,aAAG,EAAeD,gBAAlB,QAA8B,MAEtCE,EAAqC,SAA5Bb,EAAMc,kBAA+B,uCAAWzB,EAAUW,EAAMa,QAE/E,OACI,yBAAKE,UAAWC,IAAOC,SACnB,yBAAKF,UAAWC,IAAO,mBACnB,kBAACE,EAAA,EAAD,CACIH,UAAWC,IAAOG,KAClBC,IAAG,OAAEX,QAAF,IAAEA,OAAF,EAAEA,EAAOY,UACZC,MAAK,OAAEb,QAAF,IAAEA,OAAF,EAAEA,EAAOc,eAGtB,yBAAKR,UAAWC,IAAOQ,SACnB,yBAAKT,UAAWC,IAAOS,MACnB,uBAAGV,UAAWC,IAAOU,OAAQ1B,EAAMI,MAAMsB,OACzC,yBAAKX,UAAWC,IAAOV,UACnB,uBAAGS,UAAWC,IAAOW,MAArB,2DACA,uBAAGZ,UAAWC,IAAOY,UAArB,OAAgCtB,QAAhC,IAAgCA,GAAhC,UAAgCA,EAAUuB,mBAA1C,aAAgC,EAAuBH,SAG/D,yBAAKX,UAAWC,IAAO,qBACnB,uBAAGD,UAAWC,IAAOc,MAAO9B,EAAM8B,KAAlC,OAA8CC,YAAkBpB,IAChE,uBAAGI,UAAWC,IAAOH,QAASA,O,kBCjBnCmB,UArBoB,EAAGC,eAClC,IAAMC,EAAShC,YAAYiC,KACrBC,EAAYlC,YAAYmC,KAI9B,OAFAC,cAEIF,EACOH,EAIP,yBAAKlB,UAAWC,IAAOQ,SAClBU,EAAOK,OAAS,EAAIL,EAAOM,IAAIxC,GAAS,kBAAC,EAAD,CAAOyC,IAAKzC,EAAMK,GAAIL,MAAOA,KAClE,yBAAKe,UAAWC,IAAO0B,OACnB,uBAAG3B,UAAWC,IAAO2B,MAArB","file":"static/js/orders-screen.210ad91e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"styles_wrapper__3wmWC\",\"logo-container\":\"styles_logo-container__9ERH5\",\"logo\":\"styles_logo__14pdP\",\"content\":\"styles_content__qlhbZ\",\"info\":\"styles_info__28FEx\",\"status-container\":\"styles_status-container__1wVlN\",\"title\":\"styles_title__18gOE\",\"cost\":\"styles_cost__MBxh7\",\"schedule\":\"styles_schedule__9ldk3\",\"status\":\"styles_status__3pSCw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"styles_content__juWUN\",\"empty\":\"styles_empty__3ULpp\",\"text\":\"styles_text__p-veJ\"};","import { ActualEvents } from './fragments/actual-events';\nimport { EventData } from './fragments/event';\nimport { ActualEvent } from './fragments/actual-event';\nimport { City } from './fragments/city';\nimport { Suggest } from './fragments/suggest';\n\nexport type RubricEventsResponse = {\n    title: string;\n    events: ActualEvents;\n};\n\nexport type ActualEventsResponse = {\n    events: ActualEvents;\n};\n\nexport type EventResponse = EventData;\n\nexport type SelectionsResponse = {\n    selections: Array<{\n        code: string;\n        title: string;\n        count: number;\n        events: Array<ActualEvent | null>;\n    } | null>;\n};\n\nexport type SelectionEventsResponse = {\n    title: string;\n    events: ActualEvents;\n};\n\nexport type CityInfoResponse = {\n    cityInfo: City;\n};\n\nexport type CityListResponse = {\n    cities: City[];\n};\n\nexport type SuggestResponse = {\n    suggest: Suggest;\n};\n\nenum Places {\n    Top = 'top',\n    Cinema = 'cinema',\n    Concert = 'concert',\n    Theatre = 'theatre',\n}\n\nexport type RecommendedEventsResponse = {\n    [Places.Top]?: ActualEvents;\n    [Places.Cinema]?: ActualEvents;\n    [Places.Concert]?: ActualEvents;\n    [Places.Theatre]?: ActualEvents;\n};\n\nexport type UserInfo = {\n    name: string;\n    email: string;\n    phone: string;\n    address: string;\n};\n\nexport type CreateOrderResponse = {\n    paymentToken: string;\n    id: number;\n    cost: number;\n};\n\nexport enum PaymentStatus {\n    New = 'new',\n    InModeration = 'in_moderation',\n    Held = 'held',\n    InProgress = 'in_progress',\n    ModerationNegative = 'moderation_negative',\n    InCancel = 'in_cancel',\n    Canceled = 'canceled',\n    Rejected = 'rejected',\n    Paid = 'paid',\n}\n\nexport type OrderResponse = {\n    id: number;\n    status: PaymentStatus;\n    apiResponseStatus: 'success' | 'fail';\n    cost: number;\n    event: {\n        id: string;\n        title: string;\n    }\n}\n\nexport type UserInfoResponse = {\n    uid: string;\n    login: string;\n    name?: string;\n    email?: string;\n    psuid?: string;\n    avatar_id?: string;\n    display_name?: string;\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { OrderResponse, PaymentStatus } from '../../../lib/api/types';\nimport { getCurrencySymbol } from '../../../lib/price';\n\nimport { EventPage, eventPageSelector } from '../../../redux/slices/event';\n\nimport Image from '../../../components/Image';\n\nimport styles from './styles.module.css';\n\nconst StatusMap = {\n    [PaymentStatus.New]: 'Не оплачен',\n    [PaymentStatus.InModeration]: 'Идёт оплата',\n    [PaymentStatus.Held]: 'Идёт оплата',\n    [PaymentStatus.InProgress]: 'Идёт оплата',\n    [PaymentStatus.ModerationNegative]: 'Отклонён',\n    [PaymentStatus.InCancel]: 'Отменён',\n    [PaymentStatus.Canceled]: 'Отменён',\n    [PaymentStatus.Rejected]: 'Отклонён',\n    [PaymentStatus.Paid]: 'Оплачен',\n};\n\ntype Props = {\n    order: OrderResponse\n}\n\nconst Order: React.FC<Props> = ({ order }) => {\n    const eventPage: Partial<EventPage> = useSelector(eventPageSelector(order.event.id));\n    const { event, schedule } = eventPage;\n    const ticket = event?.tickets?.[0];\n    const image = event?.images?.[0];\n    const currency = ticket?.price?.currency ?? 'rub';\n\n    const status = order.apiResponseStatus === 'fail' ? 'Ошибка' : StatusMap[order.status];\n\n    return (\n        <div className={styles.wrapper}>\n            <div className={styles['logo-container']}>\n                <Image\n                    className={styles.logo}\n                    src={image?.thumbnail}\n                    src2x={image?.thumbnail2x}\n                />\n            </div>\n            <div className={styles.content}>\n                <div className={styles.info}>\n                    <p className={styles.title}>{order.event.title}</p>\n                    <div className={styles.schedule}>\n                        <p className={styles.date}>Сегодня в 20:00</p>\n                        <p className={styles.location}>{schedule?.oneOfPlaces?.title}</p>\n                    </div>\n                </div>\n                <div className={styles['status-container']}>\n                    <p className={styles.cost}>{order.cost}&nbsp;{getCurrencySymbol(currency)}</p>\n                    <p className={styles.status}>{status}</p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Order;\n","import React, { ReactElement } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport { useMetrikaHit } from '../../hooks/useMetrikaHit';\n\nimport {\n    ordersLoadingSelector,\n    ordersSelector\n} from '../../redux/slices/order';\n\nimport Order from './Order';\n\nimport styles from './styles.module.css';\n\ntype Props = {\n    skeleton: ReactElement\n};\n\nconst Component: React.FC<Props> = ({ skeleton }) => {\n    const orders = useSelector(ordersSelector);\n    const isLoading = useSelector(ordersLoadingSelector);\n\n    useMetrikaHit();\n\n    if (isLoading) {\n        return skeleton;\n    }\n\n    return (\n        <div className={styles.content}>\n            {orders.length > 0 ? orders.map(order => <Order key={order.id} order={order} />) : (\n                <div className={styles.empty}>\n                    <p className={styles.text}>Вы пока не покупали билеты</p>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Component;\n"],"sourceRoot":""}